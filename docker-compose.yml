services:
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./db_init:/docker-entrypoint-initdb.d
    command: >
      bash -c "mongod --fork --logpath /var/log/mongodb.log --bind_ip_all
      && mongoimport --db trustscore --collection commentaires --file /docker-entrypoint-initdb.d/df_commentaires_par_entreprise.json --type json --jsonArray
      && mongod --shutdown
      && mongod --bind_ip_all"
    networks:
      - my_network
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: trustscore
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - ./db_init:/docker-entrypoint-initdb.d
    networks:
      - my_network
    restart: unless-stopped

  flask_api:
    build:
      context: ./flask_api
    container_name: flask_api
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - mongodb
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: trustscore
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DB: trustscore
    networks:
      - my_network
    restart: unless-stopped

  dash_app:
    build:
      context: ./dash_app
    container_name: dash_app
    ports:
      - "8050:8050"
    depends_on:
      - flask_api
    networks:
      - my_network

  scrapping_app:
    build:
      context: ./scrapping_app
    container_name: scrapping_app
    depends_on:
      - postgres
      - mongodb
    volumes:
      - ./data:/app/data
    networks:
      - my_network
    restart: "no"

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data: